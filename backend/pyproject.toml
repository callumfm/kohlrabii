[project]
name = "app"
version = "0.1.0"
description = "Kohlrabii full-stack web-application."
requires-python = ">=3.10,<4.0"
readme = "README.md"
authors = [{ name = "Callum Macalister" }]
dependencies = [
    "alembic>=1.15.1",
    "fastapi[standard]>=0.115.12",
    "numba>=0.61.0",
    "pandas>=2.2.3",
    "playwright>=1.52.0",
    "psycopg2-binary>=2.9.10",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.8.1",
    "requests>=2.32.3",
    "scipy>=1.15.2",
    "sentry-sdk[fastapi]>=2.27.0",
    "sqlalchemy>=2.0.39",
    "supabase>=2.14.0",
]

[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "coverage<8.0.0,>=7.4.3",
    "pandas-stubs",
    "types-requests",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
plugins = ["sqlalchemy.ext.mypy.plugin"]
strict = true
exclude = ["venv", ".venv", "migrations"]

[[tool.mypy.overrides]]
module = ["numba", "scipy.optimize"]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
exclude = ["__init__.py", "migrations"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG001"]
"tests/conftest.py" = ["E402"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports from __future__ import annotations.
keep-runtime-typing = true
